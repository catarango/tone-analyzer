#png(filename = 'POTUS_Debate_Tone.png', width = 500, height = 500)
ctone
return(ctone)
clinton
clinton <- read.csv("clintontone.csv", header = FALSE)
setwd(/repos/tone-analyzer/downloads)
setwd(~/repos/tone-analyzer/downloads)
setwd(repos/tone-analyzer/downloads)
setwd("~/repos/tone-analyzer/downloads")
ctone
clinton
#load all necessary libraries
library(plotly)
#create data frames of tone analysis
clinton <- read.csv("clintontone.csv", header = FALSE)
trump <- read.csv("trumptone.csv", header = FALSE)
#give the data frames headers
colnames(clinton) <- c('tone','clinton' )
colnames(trump) <- c('tone', 'trump')
#merge the data
ctone <- merge(clinton, trump, by='tone')
return(ctone)
library(plotly)
#create data frames of tone analysis
clinton <- read.csv("clintontone.csv", header = FALSE)
trump <- read.csv("trumptone.csv", header = FALSE)
#give the data frames headers
colnames(clinton) <- c('tone','clinton' )
colnames(trump) <- c('tone', 'trump')
#merge the data
ctone <- merge(clinton, trump, by='tone')
ctone
library(ggplot2)
ggplot(ctone, aes(factor(tone))) + geom_bar(postion="dodge")
ggplot(ctone, aes(factor(tone))) + geom_bar(position="dodge")
mymat <- t(ctone[-1])
colnames(mymat) <-ctone[,1]
barplot(mymat, beside = TRUE)
head(mymat)
colnames(mymat)
help("barplot")
mymat[1,]
mymat[,1]
colnames(mymat)
colnames(mymat)
mymat[,1]
mymat[,0]
barplot(mymat, beside = TRUE, names.arg = [clinton,trump])
barplot(mymat, beside = TRUE, names.arg = ['clinton','trump'])
barplot(mymat, beside = TRUE, names.arg = mymat[,0])
barplot(mymat, beside = TRUE, legend.text = ['clinton', 'trump'])
barplot(mymat, beside = TRUE, legend.text = c('clinton', 'trump')
)
barplot(mymat, beside = TRUE, legend.text = c('clinton', 'trump'), cex.names = .5)
barplot(mymat, beside = TRUE, legend.text = c('clinton', 'trump'), cex.names = .5, col=colorRamp(c("blue", "red")))
ggplot(mymat, aes(mymat[1:13], mymat[14:35]))
p1 <- colorRampPalette(c("blue", "red"))
p1(2)
library(plotly)
#create data frames of tone analysis
clinton <- read.csv("clintontone.csv", header = FALSE)
trump <- read.csv("trumptone.csv", header = FALSE)
#give the data frames headers
colnames(clinton) <- c('tone','clinton' )
colnames(trump) <- c('tone', 'trump')
#merge the data
ctone <- merge(clinton, trump, by='tone')
#open png and plot data
#png(filename = 'POTUS_Debate_Tone.png', width = 500, height = 500)
plot_ly(ctone, x = ~tone, y = ~clinton, type = 'bar', name = 'Clinton', marker=list(color='rbg(0,0,255)') %>%
add_trace(y = ~trump, name = 'Trump', marker=list(color='rbg(255,0,0)')) %>%
layout(yaxis = list(title = '% in speech'), barmode = 'group'))
#load all necessary libraries
library(plotly)
#create data frames of tone analysis
clinton <- read.csv("clintontone.csv", header = FALSE)
trump <- read.csv("trumptone.csv", header = FALSE)
#give the data frames headers
colnames(clinton) <- c('tone','clinton' )
colnames(trump) <- c('tone', 'trump')
#merge the data
ctone <- merge(clinton, trump, by='tone')
#open png and plot data
#png(filename = 'POTUS_Debate_Tone.png', width = 500, height = 500)
plot_ly(ctone, x = ~tone, y = ~clinton, type = 'bar', name = 'Clinton', marker=list(color='rbg(0,0,255)')) %>%
add_trace(y = ~trump, name = 'Trump', marker=list(color='rbg(255,0,0)')) %>%
layout(yaxis = list(title = '% in Speech'), barmode = 'group')
plot_ly(ctone, x = ~tone, y = ~clinton, type = 'bar', name = 'Clinton', marker=list(color='rbg(0,0,255)')) %>%
add_trace(y = ~trump, name = 'Trump', marker=list(color='rbg(255,0,0)')) %>%
layout(title = 'Candidate Tone in 3rd Debate',
xaxis = list(title = ''),
yaxis = list(title = '% in Speech'),
legend  = list(x = 1, y =1)
barmode = 'group', bargap = .15, bargroupgap = 0.1)
#load all necessary libraries
library(plotly)
#create data frames of tone analysis
clinton <- read.csv("clintontone.csv", header = FALSE)
trump <- read.csv("trumptone.csv", header = FALSE)
#give the data frames headers
colnames(clinton) <- c('tone','clinton' )
colnames(trump) <- c('tone', 'trump')
#merge the data
ctone <- merge(clinton, trump, by='tone')
#open png and plot data
#png(filename = 'POTUS_Debate_Tone.png', width = 500, height = 500)
plot_ly(ctone, x = ~tone, y = ~clinton, type = 'bar', name = 'Clinton', marker=list(color='rbg(0,0,255)')) %>%
add_trace(y = ~trump, name = 'Trump', marker=list(color='rbg(255,0,0)')) %>%
layout(title = 'Candidate Tone in 3rd Debate',
xaxis = list(title = ''),
yaxis = list(title = '% in Speech'),
legend  = list(x = 1, y =1)
barmode = 'group', bargap = .15, bargroupgap = 0.1)
#load all necessary libraries
library(plotly)
#create data frames of tone analysis
clinton <- read.csv("clintontone.csv", header = FALSE)
trump <- read.csv("trumptone.csv", header = FALSE)
#give the data frames headers
colnames(clinton) <- c('tone','clinton' )
colnames(trump) <- c('tone', 'trump')
#merge the data
ctone <- merge(clinton, trump, by='tone')
#open png and plot data
#png(filename = 'POTUS_Debate_Tone.png', width = 500, height = 500)
plot_ly(ctone, x = ~tone, y = ~clinton, type = 'bar', name = 'Clinton', marker=list(color='rbg(0,0,255)')) %>%
add_trace(y = ~trump, name = 'Trump', marker=list(color='rbg(255,0,0)')) %>%
layout(title = 'Candidate Tone in 3rd Debate',
xaxis = list(title = ''),
yaxis = list(title = '% in Speech'),
legend  = list(x = 1, y =1),
barmode = 'group', bargap = .15, bargroupgap = 0.1)
help(plotly(layout()))
help("plotly")
#load all necessary libraries
library(plotly)
#create data frames of tone analysis
clinton <- read.csv("clintontone.csv", header = FALSE)
trump <- read.csv("trumptone.csv", header = FALSE)
#give the data frames headers
colnames(clinton) <- c('tone','clinton' )
colnames(trump) <- c('tone', 'trump')
#merge the data
ctone <- merge(clinton, trump, by='tone')
#open png and plot data
#png(filename = 'POTUS_Debate_Tone.png', width = 500, height = 500)
plot_ly(ctone, x = ~tone, y = ~clinton, type = 'bar', name = 'Clinton', marker=list(color='rbg(0,0,255)')) %>%
add_trace(y = ~trump, name = 'Trump', marker=list(color='rbg(255,0,0)')) %>%
layout(title = 'Candidate Tone in 2nd Debate',
xaxis = list(title = ''),
yaxis = list(title = '% in Speech'),
legend  = list(x = 1, y =1),
barmode = 'group', bargap = .15)
version(rmarkdown)
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE)
rmarkdown::render(PresDebateToneAnalysis.Rmd)
The following is an analysis of the Presidential Debate speeches using IBM's Tone Analyzer API from Watson Analytics, Python and R.
warnings()
setwd("~/repos/tone-analyzer/3rd-debate")
#load all necessary libraries
library(plotly)
#create data frames of tone analysis
clinton <- read.csv("clintontone.csv", header = FALSE)
trump <- read.csv("trumptone.csv", header = FALSE)
#give the data frames headers
colnames(clinton) <- c('tone','clinton' )
colnames(trump) <- c('tone', 'trump')
#merge the data
ctone <- merge(clinton, trump, by='tone')
#plot the data
plot_ly(ctone, x = ~tone, y = ~clinton, type = 'bar', name = 'Clinton', marker=list(color='rbg(0,0,255)')) %>%
add_trace(y = ~trump, name = 'Trump', marker=list(color='rbg(255,0,0)')) %>%
layout(title = 'Candidate Tone in Final Debate',
xaxis = list(title = ''),
yaxis = list(title = '% in Speech'),
legend  = list(x = 1, y =1),
barmode = 'group', bargap = .15)
setwd("~/repos/tone-analyzer/downloads")
#load all necessary libraries
library(plotly)
#create data frames of tone analysis
clinton <- read.csv("clintontone.csv", header = FALSE)
trump <- read.csv("trumptone.csv", header = FALSE)
#give the data frames headers
colnames(clinton) <- c('tone','clinton' )
colnames(trump) <- c('tone', 'trump')
#merge the data
ctone <- merge(clinton, trump, by='tone')
#plot the data
plot_ly(ctone, x = ~tone, y = ~clinton, type = 'bar', name = 'Clinton', marker=list(color='rbg(0,0,255)')) %>%
add_trace(y = ~trump, name = 'Trump', marker=list(color='rbg(255,0,0)')) %>%
layout(title = 'Candidate Tone in 2nd Debate',
xaxis = list(title = ''),
yaxis = list(title = '% in Speech'),
legend  = list(x = 1, y =1),
barmode = 'group', bargap = .15)
