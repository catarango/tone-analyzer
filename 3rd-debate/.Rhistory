setwd("~/repos/tone-analyzer/downloads")
install.packages("jsonlite")
library(jsonlite)
clintondf <- data.frame()
clintondf <- data.frame(clintontext.txt)
scan(clintontext.txt)
read.table(clintontext.txt)
view(clintontext.txt)
library(dplyr)
view(clintontext.txt)
library(utils)
view(clintontext.txt)
View(clintontext.txt)
read.table("clintontext.txt")
View("clintontext.txt")
jsonfile <- [{'category_id': 'emotion_tone', 'tones': [{'tone_name': 'Anger', 'score': 0.707551, 'tone_id': 'anger'}, {'tone_name': 'Disgust', 'score': 0.013022, 'tone_id': 'disgust'}, {'tone_name': 'Fear', 'score': 0.008408, 'tone_id': 'fear'}, {'tone_name': 'Joy', 'score': 0.143959, 'tone_id': 'joy'}, {'tone_name': 'Sadness', 'score': 0.126887, 'tone_id': 'sadness'}], 'category_name': 'Emotion Tone'}, {'category_id': 'language_tone', 'tones': [{'tone_name': 'Analytical', 'score': 0.656106, 'tone_id': 'analytical'}, {'tone_name': 'Confident', 'score': 0.0, 'tone_id': 'confident'}, {'tone_name': 'Tentative', 'score': 0.358847, 'tone_id': 'tentative'}], 'category_name': 'Language Tone'}, {'category_id': 'social_tone', 'tones': [{'tone_name': 'Openness', 'score': 0.672774, 'tone_id': 'openness_big5'}, {'tone_name': 'Conscientiousness', 'score': 0.906221, 'tone_id': 'conscientiousness_big5'}, {'tone_name': 'Extraversion', 'score': 0.437337, 'tone_id': 'extraversion_big5'}, {'tone_name': 'Agreeableness', 'score': 0.745675, 'tone_id': 'agreeableness_big5'}, {'tone_name': 'Emotional Range', 'score': 0.753191, 'tone_id': 'emotional_range_big5'}], 'category_name': 'Social Tone'}]
jsonfile <- {'category_id': 'emotion_tone', 'tones': [{'tone_name': 'Anger', 'score': 0.707551, 'tone_id': 'anger'}, {'tone_name': 'Disgust', 'score': 0.013022, 'tone_id': 'disgust'}, {'tone_name': 'Fear', 'score': 0.008408, 'tone_id': 'fear'}, {'tone_name': 'Joy', 'score': 0.143959, 'tone_id': 'joy'}, {'tone_name': 'Sadness', 'score': 0.126887, 'tone_id': 'sadness'}], 'category_name': 'Emotion Tone'}, {'category_id': 'language_tone', 'tones': [{'tone_name': 'Analytical', 'score': 0.656106, 'tone_id': 'analytical'}, {'tone_name': 'Confident', 'score': 0.0, 'tone_id': 'confident'}, {'tone_name': 'Tentative', 'score': 0.358847, 'tone_id': 'tentative'}], 'category_name': 'Language Tone'}, {'category_id': 'social_tone', 'tones': [{'tone_name': 'Openness', 'score': 0.672774, 'tone_id': 'openness_big5'}, {'tone_name': 'Conscientiousness', 'score': 0.906221, 'tone_id': 'conscientiousness_big5'}, {'tone_name': 'Extraversion', 'score': 0.437337, 'tone_id': 'extraversion_big5'}, {'tone_name': 'Agreeableness', 'score': 0.745675, 'tone_id': 'agreeableness_big5'}, {'tone_name': 'Emotional Range', 'score': 0.753191, 'tone_id': 'emotional_range_big5'}], 'category_name': 'Social Tone'}
jsonfile <- '[{'category_id': 'emotion_tone', 'tones': [{'tone_name': 'Anger', 'score': 0.707551, 'tone_id': 'anger'}, {'tone_name': 'Disgust', 'score': 0.013022, 'tone_id': 'disgust'}, {'tone_name': 'Fear', 'score': 0.008408, 'tone_id': 'fear'}, {'tone_name': 'Joy', 'score': 0.143959, 'tone_id': 'joy'}, {'tone_name': 'Sadness', 'score': 0.126887, 'tone_id': 'sadness'}], 'category_name': 'Emotion Tone'}, {'category_id': 'language_tone', 'tones': [{'tone_name': 'Analytical', 'score': 0.656106, 'tone_id': 'analytical'}, {'tone_name': 'Confident', 'score': 0.0, 'tone_id': 'confident'}, {'tone_name': 'Tentative', 'score': 0.358847, 'tone_id': 'tentative'}], 'category_name': 'Language Tone'}, {'category_id': 'social_tone', 'tones': [{'tone_name': 'Openness', 'score': 0.672774, 'tone_id': 'openness_big5'}, {'tone_name': 'Conscientiousness', 'score': 0.906221, 'tone_id': 'conscientiousness_big5'}, {'tone_name': 'Extraversion', 'score': 0.437337, 'tone_id': 'extraversion_big5'}, {'tone_name': 'Agreeableness', 'score': 0.745675, 'tone_id': 'agreeableness_big5'}, {'tone_name': 'Emotional Range', 'score': 0.753191, 'tone_id': 'emotional_range_big5'}], 'category_name': 'Social Tone'}]'
require(RJSONIO)
install.packages(RJSONIO)
install.packages("RJSONIO")
library(RJSONIO)
jsonfile <- '[{'category_id': 'emotion_tone', 'tones': [{'tone_name': 'Anger', 'score': 0.707551, 'tone_id': 'anger'}, {'tone_name': 'Disgust', 'score': 0.013022, 'tone_id': 'disgust'}, {'tone_name': 'Fear', 'score': 0.008408, 'tone_id': 'fear'}, {'tone_name': 'Joy', 'score': 0.143959, 'tone_id': 'joy'}, {'tone_name': 'Sadness', 'score': 0.126887, 'tone_id': 'sadness'}], 'category_name': 'Emotion Tone'}, {'category_id': 'language_tone', 'tones': [{'tone_name': 'Analytical', 'score': 0.656106, 'tone_id': 'analytical'}, {'tone_name': 'Confident', 'score': 0.0, 'tone_id': 'confident'}, {'tone_name': 'Tentative', 'score': 0.358847, 'tone_id': 'tentative'}], 'category_name': 'Language Tone'}, {'category_id': 'social_tone', 'tones': [{'tone_name': 'Openness', 'score': 0.672774, 'tone_id': 'openness_big5'}, {'tone_name': 'Conscientiousness', 'score': 0.906221, 'tone_id': 'conscientiousness_big5'}, {'tone_name': 'Extraversion', 'score': 0.437337, 'tone_id': 'extraversion_big5'}, {'tone_name': 'Agreeableness', 'score': 0.745675, 'tone_id': 'agreeableness_big5'}, {'tone_name': 'Emotional Range', 'score': 0.753191, 'tone_id': 'emotional_range_big5'}], 'category_name': 'Social Tone'}]'
jsonfile <- "[{'category_id': 'emotion_tone', 'tones': [{'tone_name': 'Anger', 'score': 0.707551, 'tone_id': 'anger'}, {'tone_name': 'Disgust', 'score': 0.013022, 'tone_id': 'disgust'}, {'tone_name': 'Fear', 'score': 0.008408, 'tone_id': 'fear'}, {'tone_name': 'Joy', 'score': 0.143959, 'tone_id': 'joy'}, {'tone_name': 'Sadness', 'score': 0.126887, 'tone_id': 'sadness'}], 'category_name': 'Emotion Tone'}, {'category_id': 'language_tone', 'tones': [{'tone_name': 'Analytical', 'score': 0.656106, 'tone_id': 'analytical'}, {'tone_name': 'Confident', 'score': 0.0, 'tone_id': 'confident'}, {'tone_name': 'Tentative', 'score': 0.358847, 'tone_id': 'tentative'}], 'category_name': 'Language Tone'}, {'category_id': 'social_tone', 'tones': [{'tone_name': 'Openness', 'score': 0.672774, 'tone_id': 'openness_big5'}, {'tone_name': 'Conscientiousness', 'score': 0.906221, 'tone_id': 'conscientiousness_big5'}, {'tone_name': 'Extraversion', 'score': 0.437337, 'tone_id': 'extraversion_big5'}, {'tone_name': 'Agreeableness', 'score': 0.745675, 'tone_id': 'agreeableness_big5'}, {'tone_name': 'Emotional Range', 'score': 0.753191, 'tone_id': 'emotional_range_big5'}], 'category_name': 'Social Tone'}]"
json_file <- fromJSON(json_file)
json_file <- fromJSON(jsonfile)
json_file <- lapply(json_file, function(x) {
x[sapply(x, is.null)] <- NA
unlist(x)
})
do.call("rbind", json_file)
do.call("cbind", json_file)
json_file <- fromJSON(jsonfile)
do.call("rbind", json_file)
do.call("rbind", json_file)
install.packages("plyr")
library(plyr)
library(plyr); library(dplyr)
json_file
setwd("~/repos/tone-analyzer/downloads")
read.table("clintontext.txt")
clinton <- read.csv("clintontone.csv")
barplot(clinton)
head(clinton)
clinton <- read.csv("clintontone.csv", header = false)
clinton <- read.csv("clintontone.csv", header = FALSE)
head(clinton)
with(clinton, barplot(1))
with(clinton, plot(V1, V2))
with(clinton, barplot(V1, V2))
barplot(clinton)
install.packages("ggplot2")
library(ggplot2)
help("barplot")
barplot(clinton$V2, names.arg = clinton$V1)
install.packages("lattice")
library(lattice)
barplot(clinton$V2, names.arg = clinton$V1, col="blue", xlab = "Tones", ylab = "% in Speach", legend.text = clinton$V1)
library(colorspace)
help("colorspace")
??colorspaces
library(swirl)
rm(list=ls())
swirl()
sample(colors(), 10)
pal <- colorRamp(c("red", "blue"))
pal(0)
pal(1)
pal(seq(0,1,len(6)))
pal(seq(0,1,len=6))
p1 <- colorRampPalette(c("red", "blue"))
p1(2)
p1(6)
0xCC
p2 <- colorRampPalette(c("red", "yellow"))
p2(2)
bye()
head(clinton)
clinton <- read.csv("clintontone.csv", header = FALSE)
head(clinton)
trump <- read.csv("trumptone.csv", header = FALSE)
head(trump)
colnames(clinton) <- c("tone", "clinton")
head(clinton)
colnames(trump) <- c('tone', 'trump')
head(trump)
ctone <- merge(clinton, trump, by="tone")
head(ctone)
help("barplot")
barplot.default(c(ctone$clinton, ctone$trump))
barplot.default(c(ctone$clinton, ctone$trump), col = colorRampPalette(c("blue", "red")))
barplot.default(c(ctone$clinton, ctone$trump), col = colorRampPalette(c("blue", "red"))(0))
barplot.default(c(ctone$clinton, ctone$trump), col = ctone$tone)
barplot.default(c(ctone$clinton, ctone$trump), names.arg = ctone$tone, col = ctone$tone)
barplot.default(c(ctone$clinton), names.arg = ctone$tone, col = ctone$tone)
barplot(as.matrix(ctone), main="Presidential Candidate Political Tone During 3rd Debate", ylab = "% in Speech", beside=TRUE, col=colours)
barplot(as.matrix(ctone), main="Presidential Candidate Political Tone During 3rd Debate", ylab = "% in Speech", xlab = "Tone Type", col=colours)
barplot(as.matrix(ctone), main="Presidential Candidate Political Tone During 3rd Debate", ylab = "% in Speech", beside = TRUE, xlab = "Tone Type", col=colours)
barplot(as.matrix(ctone), main="Presidential Candidate Political Tone During 3rd Debate", ylab = "% in Speech", beside = TRUE, xlab = "Tone Type")
barplot.default(c(ctone$clinton), names.arg = ctone$tone, col = ctone$tone, beside = TRUE)
barplot.default(c(ctone$clinton, ctone$trump), names.arg = ctone$tone, col = ctone$tone, beside = TRUE)
View(ctone)
barplot(ctone$tone, names.arg = ctone$tone, beside = TRUE)
table(ctone$clinton, ctone$trump)
install.packages("plotly")
library(plotly)
plot_ly(ctone, x = ~tone, y = ~clinton, type = 'bar', name = 'Clinton')
add_trace(y= ~trump, name='Trumpe')
add_trace(y= ~trump, name='Trump')
plot_ly(ctone, x = ~tone, y = ~clinton, type = 'bar', name = 'Clinton') %>%
add_trace(y = ~trump, name = 'Trump') %>%
layout(yaxis = list(title = '% in speech'), barmode = 'group')
help("png")
plot_ly(ctone, x = ~tone, y = ~clinton, type = 'bar', name = 'Clinton', marker=list(color = col2rgb("blue"))) %>%
add_trace(y = ~trump, name = 'Trump', marker=list(color = col2rgb("red"))) %>%
layout(title = "Candidate Tone in Third Debate" yaxis = list(title = '% in speech'), barmode = 'group')
plot_ly(ctone, x = ~tone, y = ~clinton, type = 'bar', name = 'Clinton', marker=list(color = col2rgb("blue"))) %>%
add_trace(y = ~trump, name = 'Trump', marker=list(color = col2rgb("red"))) %>%
layout(title = "Candidate Tone in Third Debate", yaxis = list(title = '% in speech'), barmode = 'group')
plot_ly(ctone, x = ~tone, y = ~clinton, type = 'bar', name = 'Clinton', marker=list(color = 'rgb(0,0,255)')) %>%
add_trace(y = ~trump, name = 'Trump', marker=list(color = 'rbg(255,0,0)') %>%
layout(title = "Candidate Tone in Third Debate", yaxis = list(title = '% in speech'), barmode = 'group')
plot_ly(ctone, x = ~tone, y = ~clinton, type = 'bar', name = 'Clinton', marker=list(color = 'rgb(0,0,255)')) %>%
add_trace(y = ~trump, name = 'Trump', marker=list(color = 'rbg(255,0,0)') %>%
layout(title = "Candidate Tone in Third Debate", yaxis = list(title = '% in speech'), barmode = 'group')
plot_ly(ctone, x = ~tone, y = ~clinton, type = 'bar', name = 'Clinton', marker=list(color = 'rgb(0,0,255)')) %>%
add_trace(y = ~trump, name = 'Trump', marker=list(color = 'rbg(255,0,0)') %>%
layout(title = 'Candidate Tone in Third Debate', yaxis = list(title = '% in speech'), barmode = 'group')
plot_ly(ctone, x = ~tone, y = ~clinton, type = 'bar', name = 'Clinton', marker=list(color = 'rgb(0,0,255)')) %>%
add_trace(y = ~trump, name = 'Trump', marker=list(color = 'rbg(255,0,0)') %>%
layout(title = "Candidate Tone in Third Debate", yaxis = list(title = '% in speech'), barmode = 'group')
clear()
plot_ly(ctone, x = ~tone, y = ~clinton, type = 'bar', name = 'Clinton', marker=list(color = 'rgb(0,0,255)')) %>%
add_trace(y = ~trump, name = 'Trump', marker=list(color = 'rbg(255,0,0)') %>%
layout(title = "Candidate Tone in Third Debate", yaxis = list(title = '% in speech'), barmode = 'group'
clear()
plot_ly(ctone, x = ~tone, y = ~clinton, type = 'bar', name = 'Clinton', marker=list(color='rbg(0,0,255)') %>%
add_trace(y = ~trump, name = 'Trump', marker=list(color='rbg(255,0,0)')) %>%
layout(yaxis = list(title = '% in speech'), barmode = 'group')
#give the data frames headers
#load all necessary libraries
library(plotly)
#create data frames of tone analysis
clinton <- read.csv("clintontone.csv", header = FALSE)
trump <- read.csv("trumptone.csv", header = FALSE)
#give the data frames headers
colnames(clinton) <- c('tone','clinton' )
colnames(trump) <- c('tone', 'trump')
#merge the data
ctone <- merge(clinton, trump, by='tone')
#open png and plot data
png(filename = 'POTUS_Debate_Tone.png', width = 500, height = 500)
plot_ly(ctone, x = ~tone, y = ~clinton, type = 'bar', name = 'Clinton', marker=list(color='rbg(0,0,255)') %>%
add_trace(y = ~trump, name = 'Trump', marker=list(color='rbg(255,0,0)')) %>%
layout(yaxis = list(title = '% in speech'), barmode = 'group')
dev.off()
#load all necessary libraries
library(plotly)
#create data frames of tone analysis
clinton <- read.csv("clintontone.csv", header = FALSE)
trump <- read.csv("trumptone.csv", header = FALSE)
#give the data frames headers
colnames(clinton) <- c('tone','clinton' )
colnames(trump) <- c('tone', 'trump')
#merge the data
ctone <- merge(clinton, trump, by='tone')
#open png and plot data
png(filename = 'POTUS_Debate_Tone.png', width = 500, height = 500)
plot_ly(ctone, x = ~tone, y = ~clinton, type = 'bar', name = 'Clinton', marker=list(color='rbg(0,0,255)') %>%
add_trace(y = ~trump, name = 'Trump', marker=list(color='rbg(255,0,0)')) %>%
layout(yaxis = list(title = '% in speech'), barmode = 'group'))
dev.off()
graphanalysis.r
run(graphanalysis.r)
#load all necessary libraries
library(plotly)
#create data frames of tone analysis
clinton <- read.csv("clintontone.csv", header = FALSE)
trump <- read.csv("trumptone.csv", header = FALSE)
#give the data frames headers
colnames(clinton) <- c('tone','clinton' )
colnames(trump) <- c('tone', 'trump')
#merge the data
ctone <- merge(clinton, trump, by='tone')
#open png and plot data
png(filename = 'POTUS_Debate_Tone.png', width = 500, height = 500)
plot_ly(ctone, x = ~tone, y = ~clinton, type = 'bar', name = 'Clinton', marker=list(color='rbg(0,0,255)') %>%
add_trace(y = ~trump, name = 'Trump', marker=list(color='rbg(255,0,0)')) %>%
layout(yaxis = list(title = '% in speech'), barmode = 'group'))
dev.off()
library(ggplot2)
ggplot(ctone, aes(tone, fill=ctone$clinton)) + geom_bar(position = "dodge")
plot_ly(ctone, x=~tone, y=~clinton, type = 'bar', name='Clinton')
plot_ly(ctone, x=~tone, y=~clinton, type = 'bar', name='Clinton') %>%
add_trace(y = ~trump, name = 'Trump') %>%
layout(yaxis = list(title = '% in Speech'), barmode = 'group')
plot_ly(ctone, x=~tone, y=~clinton, type = 'bar', name='Clinton' marker=list(color='rgb(0,0,255)')) %>%
plot_ly(ctone, x=~tone, y=~clinton, type = 'bar', name='Clinton', marker= list(color='rgb(0,0,255)')) %>%
add_trace(y = ~trump, name = 'Trump', marker = list(color='rbg(255,0,0)')) %>%
layout(yaxis = list(title = '% in Speech'), barmode = 'group')
png(filename = 'test.png')
plot_ly(ctone, x=~tone, y=~clinton, type = 'bar', name='Clinton', marker= list(color='rgb(0,0,255)')) %>%
add_trace(y = ~trump, name = 'Trump', marker = list(color='rbg(255,0,0)')) %>%
layout(yaxis = list(title = '% in Speech'), barmode = 'group')
dev.off()
library(lattice)
